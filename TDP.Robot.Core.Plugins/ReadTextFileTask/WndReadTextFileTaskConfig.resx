<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ErrProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADo6OhwDAwNlCQkJegkJCXkJCQl5CQkJeQkJCXkJCQl5CQkJeQkJ
        CXkJCQl5CQkJeQkJCXkJCQl5CQkJeQkJCXkJCQl5CQkJeQkJCXkJCQl5CQkJeQkJCXkJCQl5CQkJeQwM
        DHoAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzc3Ny/b29P/z8/P/8/Pz//Pz8//z8/P/8/Pz//Pz
        8//z8/P/8/Pz//Pz8//z8/P/8/Pz//Pz8//z8/P/8/Pz//Pz8//z8/P/8/Pz//Pz8//z8/P/8/Pz//Pz
        8//z8/P//////0RERKIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADExMTG6Ojn/+Xl5P/l5eT/5eXk/+Xl
        5P/l5eT/5eXl/+Xl5P/l5eX/5eXk/+Xl5P/l5eX/5eXl/+Xl5f/l5eX/5eXk/+Xl5P/l5eT/5eXl/+Xl
        5P/l5eX/5eXk/+Xl5P/39/b/PDw8oQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPDw8bp6ej/5ubl/+bm
        5f/m5uX/5ubl/+bm5f/m5uT/5ubl/+bm5P/m5uX/5ubl/+bm5P/m5uT/5ubk/+bm5P/m5uX/5ubl/+bm
        5f/m5uT/5ubl/+bm5P/m5uX/5ubl//j49/88PDyhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxMTDxurq
        6f/q6un/6uro/+rq6f/q6un/6urp/+rq6f/q6un/6urp/+rq6f/q6uj/6eno/+fn5v/o6Ob/5+fm/+fn
        5v/o6Of/5+fm/+fn5v/n5+b/5+fm/+fn5v/n5+b/+fn4/zw8PKEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADExMTG7u7t/8C+v//Ly8v/yMjI/8bGxv/Gxsf/ycnJ/8PDw//IyMj/w8PD/8rKyv/Ozs7/39/d/9nZ
        2f/b2tr/39/e/9fX1v/c2tr/29vb/9vb3P/a2tn/3dzc/+jo5//6+vn/PDw8oQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMTExMbt7ez/4ODf/+nq6v/p5+f/6+vq/+fo5v/p6ej/5ubm/+jo6P/m5eX/5eXl/+Li
        4f/l5eT/4uLh/+Li4//l5eT/39/e/+Li4//m5eX/4+Tk/+Li4v/k5eP/6ejo//v7+v88PDyhAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAxMTExvDw7//GxsX/y8zK/8rJyf/Hx8b/ycfI/83MzP/Iycn/1tTU/97e
        3f/i4uL/7u7s/+zs6v/s7Ov/7Ozr/+zs6//t7ez/7Ozr/+vr6v/t7ev/7e3s/+vr6v/q6uj//Pz8/zs7
        O6EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADFxcTG8fHw/8zMy//Y19f/09HS/9HRz//R0dL/09TS/9XU
        1P/Ozs3/1NPT/9PT0v/R0dH/3Nzc/9vb3P/X19b/3Nrb/9fX1//X19f/39/e/9PT0//S0tD/39/e/+vr
        6v/9/f3/Ozs7oQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMXFxcby8vL/0NDQ/9jY2P/g4OD/3Nvb/9nZ
        1//Z2dj/3d3c/9nZ2P/a2tn/397e/93d3f/d3d3/2trZ/9nZ2f/W19f/3t3d/9PT1P/X19b/39/g/+/v
        7v/s7O3/7Ozq//7+/v87OzuhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxcTFxvLy8v/c3Nz/3Nzc/9jY
        2P/f39//2trY/+Hh4P/X19f/3d3c/9nZ2P/X19f/19fX/9/f3//W1tb/39/f/9nZ2f/o6Of/8PDw/+7u
        7//t7e3/7e3t/+3t7f/t7e3//////zs7O6EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADExsTG8/Pz/+Li
        4f/n5+j/5OTl/+Hh4P/m5uf/4uLi/+Tk5P/i4+P/5eXl/+jo6P/m5ub/6Ojo/+Tk5P/h4eH/8vLy//Dw
        8f/v7+//7+/v/+/v7//w8PD/7+/v/+7u7v//////Ozs7oQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMbG
        xsb29vb/yMjI/9ra2v/X2Nb/2NbW/9jZ2f/Z2dj/0NDQ/9vZ2f/V1dX/1tbW/9TU1P/R0dD/39/e/9jY
        2P/j4uL/2tra/9zc3P/e3tz/3t7c/9fX1v/f3t7/8PDw//////87OzuhAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAxcXFxvf29v/d3Nz/4ODg/93d3f/c3Nz/4ODg/+Dg4P/a2tr/2tra/9vb2v/f39//2tnZ/9ra
        2v/f39//3Nzc/+Dh4f/X19X/4eHg/9jY2P/g4OH/39/f/9nZ2P/z8/L//////zo6OqEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADFxcXG+Pb2/+Li4v/h4eH/2tra/+Xk4//e3t3/+Pb3//b29v/29fX/9vb1//X0
        9P/29fX/9vf1//X19P/29vT/9fT0//b29f/19fT/9vT1//X09P/19fT/9fX0//Ly8f//////Ojo6oQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMbGx8b5+fj/2dna/9/h3//i4uH/3d/d/+Dg3//f4N7/4ODg/9vb
        2v/d3d3/4+Pj/93d3f/b2tr/4ODh/93d3f/d3dz/3Nzb/97e3v/e3t7/3d3c/93d3f/b29r/9PTz////
        //86OjqhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxsbGxvr6+v/e3d3/4+Pi/+bm5//d3d3/5+jo/+De
        3v/d3d3/4+Pi/9/f3//e3t7/4uLh/+Hh4f/c3Nz/5OTj/9zc2//r6+v/4+Pj/+Dg3//6+vr/9/f4//f3
        9v/09PL//////zo6OqEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADGxsbG+/v7/9/f3//g4OD/3d3c/+Tk
        5P/l5eT/4uHh/+Dh4f/l5eb/4uPj/+Tk5P/d3d3/5OTk/+bm5v/Y2dn/6Ojm/+bm5v/c3Nr/5eXl/+Li
        4f/g4OD/4uLi//b29v//////Ojo6oQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMbGxsb8/Pz/39/f/+Tk
        5P/j4+P/7Ozs/+Hh4f/q6ur/29vZ/+Li4v/k4+P/4ODg/+bl5f/g4eH/5OTk/+bk5P/j5OT/5ubm/+Pj
        4//p6en/5+fn/+Hh4f/y8vL/9vb2//////85OTmhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAx8fHxv7+
        /v/a2tr/4ODg/9zc3P/e3t7/4ODg/9PT0//m5Ob/3d3d/+Li4v/n5+f/4N7e/+Li4v/f39//4OHf/9/f
        3//k5OT/2tra/+Li4v/Z2dn/29va//f39v/39/f//////zk5OaEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADHx8fG/////9bW1v/Q0ND/4eHh/9XV1f/d3dz/3t7e/9ra2v/b29z/09PR/+Li4v/W1tb/3d3d/9rc
        2v/d3d3/2NfX/+Dg4P/X19f/2dnZ/93d3f/T09P/6evp//n4+f//////OTk5oQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMfHx8b+/v7/9fX1//v5+f/09PT/+fn5//X19f/z8/P/9fX1//b29v/x8fH/9/f3//Ly
        8v/19fX/8/Pz//f39//x8fH/9fX1//n3+f/29vb/8/Pz//Pz8//8/Pv/+fn6//////85OTmhAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAxsbGxv/////d3d3/5OTk/+Pj4//9/f3//f39//39/f/8/Pz//Pz8//39
        /f/9/f3//f39//z8/P/9/f3//fz8//v8/P/09PT/7e3t/+7u7v/u7u7/7u7u/+3t7f/u7u7//////zo6
        OpwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIyMjG/////+Hh4f/w8PD/5+fn/+Dg4P/n5+f/5OTi/+jo
        6P/m5ub/5+fn/+Pj4//i4+P/6+vp/+bm5v/m5ub/6Ojn/8bFxf/X19X/1NTU/9TU1P/U1NT/1dXV/9/f
        3///////QkJCfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMfHyMb/////4ODg/+Li4v/q6ur/7u7u/+bm
        5v/k5OT/5eXl/+fn5//c3Nz/5OXl/+Df3//o6Oj/4ODg/+7u7v/q6uv/tri2//////////7/////////
        /v///////////21tbZ4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAx8fHxv//////////////////
        ///////////////////////////////////+/v7//v7+//3//f/+/v7///////Ly8v+5uLn///////v7
        /P/7+/z///////Pz8/9ERERqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADHx8fG/////9fX
        1v/X19f/5OTk/9bW1v/p6ef/0NDQ/8zLy//d3d3///////39/f/9/f3//fz9//39/f/+/v7/8/Pz/7i4
        uP///////f39///////d3d3/BAQEOwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMfH
        x8b////////////////////////////////////////////////+/v7//v7+//7+/v/+/v7//v7+////
        ///09PT/t7e3////////////v7+/6xQUFBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAycrJx///////////////////////////////////////////////////////////////////
        //////////////r6+v/S0tL//////5yamskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC+vr64zc3N/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vL
        y//Ly8v/y8vL/8vLy//MzMz/zMzM/9HR0f9paWmTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AA
        AA/gAAAf4AAAP+AAAH/gAAH/4AAD//////8=
</value>
  </data>
</root>